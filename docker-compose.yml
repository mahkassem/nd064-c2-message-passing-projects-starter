version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    hostname: kafka-server
    container_name: kafka-server
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    depends_on:
      - zookeeper

  db:
    image: postgis/postgis:12-2.5-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "7432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  connection-api:
    build: modules/connection-api
    restart: always
    environment:
      DB_USERNAME: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: "${POSTGRES_DB}"
    ports:
      - "5000:5000"
    depends_on:
      - db
      - person-api

  location-api:
    build: modules/location-api
    restart: always
    environment:
      DB_USERNAME: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: "${POSTGRES_DB}"
    ports:
      - "5001:5000"
      - "5005:5005"
    depends_on:
      - db
      - kafka

  person-api:
    build: modules/person-api
    restart: always
    environment:
      DB_USERNAME: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: "${POSTGRES_DB}"
    ports:
      - "5002:5000"
    depends_on:
      - db

  location-producer:
    build: modules/producer-demo
    depends_on:
      - kafka
      - location-api

  frontend:
    build: modules/frontend
    restart: always
    ports:
      - "3000:3000"

volumes:
  db_data:
